@using MudBlazor
@using Microsoft.AspNetCore.Authorization @* If not already present globally *@

@* Remove old nav structure, replace with MudNavMenu *@
<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>

    @* Example: Golf Clubs link accessible to all *@
    <MudNavLink Href="golfclubs" Icon="@Icons.Material.Filled.LocationCity">Golf Clubs</MudNavLink>

    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="players" Icon="@Icons.Material.Filled.People">Players</MudNavLink>
            <MudNavLink Href="rounds" Icon="@Icons.Material.Filled.GolfCourse">Rounds</MudNavLink> @* Using GolfCourse icon for rounds *@
            <MudNavLink Href="rounds/record" Icon="@Icons.Material.Filled.AddCircleOutline" IconColor="Color.Success">Record New Round</MudNavLink>

            @* Player Account Links *@
            <MudListSubheader>My Account</MudListSubheader>
            <MudNavLink Href="Account/Manage" Icon="@Icons.Material.Filled.Person">@context.User.Identity?.Name</MudNavLink>
            @* Logout still needs a form, so it's a bit different.
               You might keep your existing form-based logout or adapt it.
               For a MudNavLink style, you might need a component that wraps the form.
               Alternatively, a button in the AppBar (MainLayout) is common for logout.
            *@
            <div class="px-4 mt-2"> @* Simple form for logout, styled as best as possible within nav *@
                 <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Text" Color="Color.Inherit" StartIcon="@Icons.Material.Filled.Logout">Logout</MudButton>
                </form>
            </div>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="Account/Register" Icon="@Icons.Material.Filled.PersonAdd">Register</MudNavLink>
            <MudNavLink Href="Account/Login" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>

    <AuthorizeView Roles="Admin">
        <MudListSubheader>Admin</MudListSubheader>
        <MudNavLink Href="admin/datamigration" Icon="@Icons.Material.Filled.Storage">Data Migration</MudNavLink>
        @* <MudNavLink Href="/admin/dashboard" Icon="@Icons.Material.Filled.AdminPanelSettings">Admin Dashboard</MudNavLink> *@
    </AuthorizeView>
</MudNavMenu>

@code {
    // Keep your existing currentUrl logic for the logout form if you keep that form here.
    private string? currentUrl;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}