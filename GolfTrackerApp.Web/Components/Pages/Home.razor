@page "/"
@attribute [Authorize]
@rendermode InteractiveServer

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IRoundService RoundService
@inject IReportService ReportService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IDialogService DialogService


@using System.Security.Claims
@using GolfTrackerApp.Web.Models
@using GolfTrackerApp.Web.Components.Shared
@using GolfTrackerApp.Web.Services
@using Microsoft.AspNetCore.Authorization
@using MudBlazor



<PageTitle>Dashboard</PageTitle>

<MudText Typo="Typo.h4" GutterBottom="true">Dashboard</MudText>

@if (isLoading)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{
    <MudGrid Spacing="3">
        <MudItem xs="12" sm="6">
            @* Placeholder for Quick Actions Card *@
            <MudPaper Class="pa-4" Style="height: 100%;">
                <MudText Typo="Typo.h6">Quick Actions</MudText>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" sm="6">
            @* Placeholder for Performance Snapshot Card *@
            <MudPaper Class="pa-4" Style="height: 100%;">
                <MudText Typo="Typo.h6">My Recent Form</MudText>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" sm="6">
            @* Placeholder for Recent Rounds Card *@
            <MudPaper Class="pa-4" Style="height: 100%;">
                <MudText Typo="Typo.h6">Recent Rounds</MudText>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" sm="6">
            <MudCard Elevation="2">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Playing Partners</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    @if (partnerSummary is null || !partnerSummary.Any())
                    {
                        <MudText>Play some rounds with friends to see stats here.</MudText>
                    }
                    else
                    {
                        <MudList clickable="true" T="object">
                            @foreach (var partner in partnerSummary)
                            {
                                <MudListItem T="object" Href="@($"/players/{partner.PartnerId}/report")">
                                    <div class="d-flex justify-space-between flex-grow-1">
                                        <div class="d-flex flex-column">
                                            <MudText>@partner.PartnerName</MudText>
                                            <MudText Typo="Typo.caption">Last played: @partner.LastPlayedDate.ToString("dd MMM yyyy")</MudText>
                                        </div>
                                        <MudText Typo="Typo.body2">Record: @partner.UserWins-@partner.PartnerWins-@partner.Ties</MudText>
                                    </div>
                                </MudListItem>
                            }
                        </MudList>
                    }
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
}


@code {
    private bool isLoading = true;
    private List<PlayingPartnerSummary>? partnerSummary;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var currentUserId = user.FindFirstValue(ClaimTypes.NameIdentifier);

        if (currentUserId is not null)
        {
            partnerSummary = await ReportService.GetPlayingPartnerSummaryAsync(currentUserId, 4); // Get top 4 partners
        }

        isLoading = false;
    }
}