@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor

@if (!string.IsNullOrEmpty(Message))
{
    <MudAlert Severity="@(Message.StartsWith("Error") ? Severity.Error : Severity.Success)"
              Variant="Variant.Filled"
              Class="mb-4"
              ShowCloseIcon="true"
              CloseIconClicked="@ClearMessage">
        @Message
    </MudAlert>
}

@code {
    [Parameter]
    public string? Message { get; set; }

    protected override void OnInitialized()
    {
        var httpContext = HttpContextAccessor.HttpContext;
        if (httpContext is not null)
        {
            if (httpContext.Request.Cookies.TryGetValue(IdentityRedirectManager.StatusCookieName, out var cookieMessage))
            {
                Message = cookieMessage;
                httpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
            }
        }
    }

    private void ClearMessage()
    {
        Message = null;
        StateHasChanged();
    }
}