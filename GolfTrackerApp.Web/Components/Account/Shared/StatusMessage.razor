@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor

@if (!string.IsNullOrEmpty(Message))
{
    var statusMessageClass = Message.StartsWith("Error") ? "danger" : "success";
    <div class="alert alert-@statusMessageClass alert-dismissible" role="alert">
        <div>@Message</div>
        <button type="button" class="btn-close" @onclick="@ClearMessage" aria-label="Close"></button>
    </div>
}

@code {
    [Parameter]
    public string? Message { get; set; }

    protected override void OnInitialized()
    {
        var httpContext = HttpContextAccessor.HttpContext;
        if (httpContext is not null)
        {
            if (httpContext.Request.Cookies.TryGetValue(IdentityRedirectManager.StatusCookieName, out var cookieMessage))
            {
                Message = cookieMessage;
                httpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
            }
        }
    }

    private void ClearMessage()
    {
        Message = null;
        StateHasChanged();
    }
}